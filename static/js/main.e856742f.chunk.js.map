{"version":3,"sources":["components/Navbar.js","components/ProjectModal.js","components/Pages/Projects.js","components/Pages/home.js","components/SocialLinks.js","components/Pages/about.js","components/Pages/Contact.js","components/Pages/Experience.js","components/Page.js","components/Footer.js","components/Active.js","App.js","serviceWorker.js","index.js"],"names":["Page","user","useState","navOpen","setNavOpen","id","className","to","onClick","Modal","setAppElement","Projects","projects","map","project","key","name","src","website","alt","languages","language","libraries","library","summary","Home","basics","region","headline","text","href","SocialLinks","profiles","profile","network","url","target","style","height","width","bgColor","email","About","ContactForm","useForm","state","handleSubmit","succeeded","onSubmit","htmlFor","type","prefix","field","errors","disabled","submitting","App","work","company","highlights","position","start","month","year","end","pageSummaryMapping","interests","reduce","obj","item","Object","assign","keywords","path","contact","Contact","picture","about","experience","Experience","Footer","Active","Navbar","setUser","useEffect","fetch","then","res","json","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e856742f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {\n    Link\n} from \"react-router-dom\";\n\nconst Page = ({user}) =>  {\n\n    const [ navOpen, setNavOpen ] = useState(false);\n\n    return (\n       <section id='nav'>\n        <nav className = {navOpen ? 'active' : ''}>\n\n\n                <div className =\"header\">\n                    <Link className=\"AraMatthew\" to=\"/\">Ara<span className = 'boldBlue'>Matthew</span></Link>\n                    <figure className=\"dropbtn\" onClick={ () => { setNavOpen(!navOpen) } }/>\n                </div>\n\n                <div onClick={ () => { setNavOpen(!navOpen) } } id='links' className = \"links\"> \n                    <Link to=\"/about\">About</Link>\n                    <Link to=\"/projects\">Projects</Link>\n                    <Link to=\"/experience\">Experience</Link>    \n                    <Link to=\"/contact\">Contact</Link>               \n                </div>\n        </nav>\n        </section>\n\n    );\n}\n        \n    \nexport default Page;","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport IframeResizer from 'iframe-resizer-react'\nModal.setAppElement('#root');\n\n\n\n\nconst ProjectModal = (project) => {\n\n    function resizeIFrameToFitContent( iFrame ) {\n\n      iFrame.width  = iFrame.contentWindow.document.body.scrollWidth;\n      iFrame.height = iFrame.contentWindow.document.body.scrollHeight;\n  }\n\n  window.addEventListener('DOMContentLoaded', function(e) {\n\n      var iFrame = document.getElementById( 'iFrame1' );\n      resizeIFrameToFitContent( iFrame );\n\n      // or, to resize all iframes:\n      var iframes = document.querySelectorAll(\"iframe\");\n      for( var i = 0; i < iframes.length; i++) {\n          resizeIFrameToFitContent( iframes[i] );\n      }\n  } );\n      \n    const url = project.githubUrl;\n    console.log(project.name);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n\n    return (\n        <div>\n        <button onClick={() => setModalIsOpen(true) }> play</button>  \n        <Modal  \n        id={project.name} \n        className='modal' \n        style={{overlay:{backgroundColor: 'transparent'}}} \n        isOpen={modalIsOpen} onRequestClose={()=>setModalIsOpen(false)}\n        // eslint-disable-next-line react/jsx-no-duplicate-props\n        style={{\n            overlay: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n            //   backgroundColor: 'rgba(255, 255, 255, 0.75)'\n            },\n            content: {\n              position: 'absolute',\n            //   top: '40px',\n            //   left: '40px',\n            //   right: '40px',\n            //   bottom: '40px',\n              border: '1px solid #ccc',\n            //   background: '#fff',\n              overflow: 'auto',\n              WebkitOverflowScrolling: 'touch',\n              borderRadius: '4px',\n              outline: 'none',\n              padding: '0px'\n            }\n          }}\n        \n        >\n\n            {/* <iframe title = 'dodo' src={project.githubUrl} /> */}\n            {/* {console.log(project.githubUrl)} */}\n            {/* <iframe title = 'dodo' src='https://aramatthew.com/RehabASeal/'  id=\"iFrame1\"/> */}\n     \n            <IframeResizer\n              log\n              src=\"https://aramatthew.com/RehabASeal/\"\n              style={{ width: '1px', minWidth: '100%'}}\n            />\n\n          \n        </Modal>\n        </div>\n\n    );\n}\n\nexport default ProjectModal;","import React from 'react';\nimport ProjectModal from '../ProjectModal';\n\n\n\n\n\nconst Projects = ({user}) => {\n\n\n    return (\n        <section id=\"projectspage\">\n\n\n\n\n            <div className='projects'> \n                {user.projects.map(project => (\n                    \n                    // eslint-disable-next-line react/jsx-no-target-blank\n                    <div className = 'project'   key={project.name} >\n\n\n\n\n                            <img className =\"gif\" src={project.website}  alt='gif of app'  />\n                            <div className = 'information'> \n                                <h1 className='projectName'> {project.name} </h1>\n                                    <div className =\"languages\">\n                                        {project.languages.map(language => (\n                                            \n                                                <em key={language}>{language} </em>\n                                        ))}\n                                    <div className =\"frameworks\">\n                                        {project.libraries.map(library => (\n                                                <em key={library}>{library} </em>\n                                        ))} \n                                    </div>\n                                    </div>\n\n                                <p>{project.summary}</p>\n\n                            </div>\n\n                            {/* <ProjectModal project={project} /> */}\n\n\n\n\n\n\n\n                    </div>\n                \n                ))}\n            </div>\n\n\n        </section>\n    );\n}\n\n\n\n\nexport default Projects;","import React from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\n\n\nconst Home = ({user}) => {\n    return (\n        <section id=\"home\">\n\n            <h1>Hello, my name is <strong>{user.basics.name}</strong></h1> \n            <p>I am a <strong>{user.basics.region}</strong> based <strong>{user.basics.headline}</strong> with a strong inclination for problem-solving and seeing unique ideas come to life.</p>\n            <ReactTypingEffect className='typingEffect'\n                text=\"Learn more about me! \"\n            />\n            \n                <a href='/about'> <figure className = 'bottombtn'></figure></a>\n\n            \n\n            {/* <iframe src=\"https://aramatthew.com/RehabASeal/\" height=\"600\" width=\"960\"></iframe> */}\n            \n\n        </section>\n    );\n}\n\n\nexport default Home;","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\n\n\nconst SocialLinks = ({user}) => {\n\n    return (\n            <div className=\"SocialLinks\">\n\n\n                {user.basics.profiles.map(profile => (\n\n\n                \n                    <div className = {profile.network} key ={profile.network}>\n                        <SocialIcon url={profile.url} target=\"_blank\" style={{ height: 30, width: 30 }} bgColor=\"#ffffff\"/>\n                        <em className=\"name\"> {profile.network} </em>\n                    </div>\n\n                    \n                    \n                ))}\n                <div>\n                    <SocialIcon url={'mailto:'+ user.basics.email} network= 'email' style={{ height: 30, width: 30 }} bgColor=\"#ffffff\"/>\n                    <em className=\"name\"> email </em>\n                </div>\n            </div>\n           \n        \n    );\n}\n\n\nexport default SocialLinks;","import React from 'react';\nimport SocialLinks from '../SocialLinks';\n\nconst About = ({user}) => {\n\n    return (\n            <section id=\"about\">\n\n                  {/* <img className=\"profile-pic\"  src={user.basics.picture} alt=\"Ara Matthew Profile Pic\" /> */}\n                \n                <div className ='bio'> \n                    <h1>About Me</h1>\n                    <p> {user.basics.summary} </p>\n                    <p className='forwards'> Want to know more about me? Check out my <a href='/experience'> experience </a>and <a href='/projects'> projects!</a></p>\n                </div> \n\n                <div className ='contacts'> \n                    <h1>Contact</h1>\n                    <SocialLinks user={user} />\n\n                </div> \n\n            </section>\n           \n        \n    );\n}\n\n\nexport default About;","// Make sure to run npm install @formspree/react\n// For more help visit https://formspr.ee/react-help\nimport React from 'react';\nimport { useForm, ValidationError } from '@formspree/react';\nfunction ContactForm() {\n  const [state, handleSubmit] = useForm(\"xjvaajap\");\n  if (state.succeeded) {\n    return <form> <p>Thank you, I will get back to you soon!</p></form>;\n  }\n  return (\n    \n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"email\">\n        Email:\n      </label>\n      <input\n        id=\"email\"\n        type=\"email\"\n        name=\"email\"\n      />\n      <ValidationError\n        prefix=\"Email\"\n        field=\"email\"\n        errors={state.errors}\n      />\n      <div className='label'>\n        <label>Message:</label>\n      </div>\n      \n      <textarea className = \"messageInput\"\n        id=\"message\"\n        name=\"message\"\n      />\n      <ValidationError\n        prefix=\"Message\"\n        field=\"message\"\n        errors={state.errors}\n      />\n      <button type=\"submit\" disabled={state.submitting}>\n        Submit\n      </button>\n      \n    </form>\n  );\n}\nfunction App() {\n  return (\n    <ContactForm />\n  );\n}\nexport default App;","import React from 'react';\n\n\n\n\nconst Projects = ({user}) => {\n\n\n    return (\n\n\n        <section id=\"experiencepage\">\n\n            \n            {user.work.map(work => (\n                \n                // eslint-disable-next-line react/jsx-no-target-blank\n                <a href={work.website} className=\"link\" target=\"_blank\"  key={work.company}> \n                    <img className =\"gif\" src={work.highlights[0]}  alt=\"logo\"></img> \n\n\n\n                    <div className='info'>\n                        <h1 className='position'> {work.position} </h1>\n                        <h4 className='company'> {work.company} </h4>\n                        <h5 className='dates'> {work.start.month}/{work.start.year} - {work.end.month}/{work.end.year} </h5>\n                        <p>{work.summary}</p>\n                    </div>\n                </a>\n            ))}\n\n\n        </section>\n    );\n}\n\n\nexport default Projects;\n\n\n\n","import Projects from './Pages/Projects.js';\nimport Home from './Pages/home.js';\nimport About from './Pages/about.js';\nimport Contact from './Pages/Contact.js';\nimport Experience from './Pages/Experience.js';\n\n\n\nimport React from \"react\";\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nconst Page = ({user}) =>  {\n\n    const pageSummaryMapping = user.interests.reduce(\n      (obj, item) => Object.assign(obj, { [item.name]: item.keywords[0] }), {});\n\n    return (\n      <section id=\"page\">\n      <Switch >          \n        <Route path=\"/contact\">\n          <div className = \"pageSummary\"> \n            <div className='container'>\n                  <h1>Contact</h1>\n                  <p>\n                    {pageSummaryMapping.contact}\n                  </p>\n                </div>\n          </div>\n          <Contact />\n        </Route>\n        <Route path=\"/about\">\n          <div className = \"pageSummary\"> \n            <div className='container'>\n                <img src ={user.basics.picture} alt=\"Ara Matthew Profile Pic\" />\n                <h1>{user.basics.name}</h1>\n                <p>\n                  {pageSummaryMapping.about}\n                </p>\n            </div>\n          </div>\n          <About className = \"container\" user = {user} />\n        </Route>\n        <Route path=\"/projects\">\n          <div className = \"pageSummary\"> \n              <div className='container'>\n                <h1>Projects</h1>\n                <p>\n                {pageSummaryMapping.projects}\n                </p>\n              </div>\n          </div>\n          <Projects user = {user}/>\n        </Route>\n\n        <Route path=\"/experience\">\n          <div className = \"pageSummary\">\n            <div className='container'> \n              <h1>Experience</h1>\n              <p>\n              {pageSummaryMapping.experience}\n              </p>\n            </div>\n          </div>\n          <Experience user = {user}/>\n        </Route>\n\n        <Route path=\"/\">\n          <Home user = {user}/>\n        </Route>\n\n      </Switch>\n      </section>\n\n\n    )\n}\n\nexport default Page;","import React from 'react';\nimport SocialLinks from './SocialLinks';\n\nconst Footer = ({user}) => (\n    <footer className=\"footer\">\n      <p>@ 2020 <a href='/'>Ara<strong>Matthew</strong></a></p>\n      <div className = \"socialLinks\">\n        <SocialLinks user= {user} />\n      </div>\n    </footer>\n  );\n\n  export default Footer;","\n\nimport Navbar from './Navbar.js';\nimport Page from './Page.js';\nimport Footer from './Footer'\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\nconst Active = ({user}) =>  {\n  return (\n    <Router>\n      <Navbar />\n      <div className =\"curr\">\n        <Page user = {user}/>\n      </div>\n      <Footer user = {user} />\n    </Router> \n  );\n}\n\n\nexport default Active;\n","import React from 'react';\nimport { useState, useEffect } from 'react'; \n// import localUser from './ifilter/myInfo.json';\nimport Page from './components/Active';\n\n\n\n\nconst App = () => {\n  const [user, setUser] = useState(null);  //initial value of user is null \n  useEffect( () => {\n    fetch('https://gitconnected.com/v1/portfolio/aghiulez') // returns a promise containing the response \n      .then(res => res.json())\n      .then(user => {\n        setUser(user);\n      });\n  }, []); //empty array (as second arg) will only call effect on initial render...\n  \n  if(!user){\n    console.log(\"nothing\");\n    return ( <div>   </div>);\n  }\n  return(\n      <Page className=\"page\" user={user} />\n\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}