{"version":3,"sources":["components/Navbar.js","components/ProjectModal.js","components/Pages/Projects.js","components/Pages/home.js","components/SocialLinks.js","components/Pages/about.js","components/Pages/Contact.js","components/Pages/Experience.js","components/Page.js","components/Footer.js","components/Active.js","App.js","serviceWorker.js","index.js"],"names":["Page","user","useState","navOpen","setNavOpen","id","className","to","onClick","Modal","setAppElement","Projects","projects","map","project","key","name","src","website","alt","languages","language","libraries","library","summary","Home","basics","region","headline","text","href","SocialLinks","profiles","profile","network","url","target","style","height","width","bgColor","email","About","ContactForm","useForm","state","handleSubmit","succeeded","onSubmit","htmlFor","type","prefix","field","errors","disabled","submitting","App","work","company","highlights","position","start","month","year","end","pageSummaryMapping","interests","reduce","obj","item","Object","assign","keywords","path","contact","Contact","picture","about","experience","Experience","Footer","Active","Navbar","setUser","useEffect","fetch","then","res","json","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a2749b42.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst Page = ({user}) =>  {\r\n\r\n    const [ navOpen, setNavOpen ] = useState(false);\r\n\r\n    return (\r\n       <section id='nav'>\r\n        <nav className = {navOpen ? 'active' : ''}>\r\n\r\n\r\n                <div className =\"header\">\r\n                    <Link className=\"AraMatthew\" to=\"/\">Ara<span className = 'boldBlue'>Matthew</span></Link>\r\n                    <figure className=\"dropbtn\" onClick={ () => { setNavOpen(!navOpen) } }/>\r\n                </div>\r\n\r\n                <div onClick={ () => { setNavOpen(!navOpen) } } id='links' className = \"links\"> \r\n                    <Link to=\"/about\">About</Link>\r\n                    <Link to=\"/projects\">Projects</Link>\r\n                    <Link to=\"/experience\">Experience</Link>    \r\n                    <Link to=\"/contact\">Contact</Link>               \r\n                </div>\r\n        </nav>\r\n        </section>\r\n\r\n    );\r\n}\r\n        \r\n    \r\nexport default Page;","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport IframeResizer from 'iframe-resizer-react'\r\nModal.setAppElement('#root');\r\n\r\n\r\n\r\n\r\nconst ProjectModal = (project) => {\r\n\r\n    function resizeIFrameToFitContent( iFrame ) {\r\n\r\n      iFrame.width  = iFrame.contentWindow.document.body.scrollWidth;\r\n      iFrame.height = iFrame.contentWindow.document.body.scrollHeight;\r\n  }\r\n\r\n  window.addEventListener('DOMContentLoaded', function(e) {\r\n\r\n      var iFrame = document.getElementById( 'iFrame1' );\r\n      resizeIFrameToFitContent( iFrame );\r\n\r\n      // or, to resize all iframes:\r\n      var iframes = document.querySelectorAll(\"iframe\");\r\n      for( var i = 0; i < iframes.length; i++) {\r\n          resizeIFrameToFitContent( iframes[i] );\r\n      }\r\n  } );\r\n      \r\n    const url = project.githubUrl;\r\n    console.log(project.name);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n\r\n    return (\r\n        <div>\r\n        <button onClick={() => setModalIsOpen(true) }> play</button>  \r\n        <Modal  \r\n        id={project.name} \r\n        className='modal' \r\n        style={{overlay:{backgroundColor: 'transparent'}}} \r\n        isOpen={modalIsOpen} onRequestClose={()=>setModalIsOpen(false)}\r\n        // eslint-disable-next-line react/jsx-no-duplicate-props\r\n        style={{\r\n            overlay: {\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              position: 'fixed',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n            //   backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n            },\r\n            content: {\r\n              position: 'absolute',\r\n            //   top: '40px',\r\n            //   left: '40px',\r\n            //   right: '40px',\r\n            //   bottom: '40px',\r\n              border: '1px solid #ccc',\r\n            //   background: '#fff',\r\n              overflow: 'auto',\r\n              WebkitOverflowScrolling: 'touch',\r\n              borderRadius: '4px',\r\n              outline: 'none',\r\n              padding: '0px'\r\n            }\r\n          }}\r\n        \r\n        >\r\n\r\n            {/* <iframe title = 'dodo' src={project.githubUrl} /> */}\r\n            {/* {console.log(project.githubUrl)} */}\r\n            {/* <iframe title = 'dodo' src='https://aramatthew.com/RehabASeal/'  id=\"iFrame1\"/> */}\r\n     \r\n            <IframeResizer\r\n              log\r\n              src=\"https://aramatthew.com/RehabASeal/\"\r\n              style={{ width: '1px', minWidth: '100%'}}\r\n            />\r\n\r\n          \r\n        </Modal>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ProjectModal;","import React from 'react';\r\nimport ProjectModal from '../ProjectModal';\r\n\r\n\r\n\r\n\r\n\r\nconst Projects = ({user}) => {\r\n\r\n\r\n    return (\r\n        <section id=\"projectspage\">\r\n\r\n\r\n\r\n\r\n            <div className='projects'> \r\n                {user.projects.map(project => (\r\n                    \r\n                    // eslint-disable-next-line react/jsx-no-target-blank\r\n                    <div className = 'project'   key={project.name} >\r\n\r\n\r\n\r\n\r\n                            <img className =\"gif\" src={project.website}  alt='gif of app'  />\r\n                            <div className = 'information'> \r\n                                <h1 className='projectName'> {project.name} </h1>\r\n                                    <div className =\"languages\">\r\n                                        {project.languages.map(language => (\r\n                                            \r\n                                                <em key={language}>{language} </em>\r\n                                        ))}\r\n                                    <div className =\"frameworks\">\r\n                                        {project.libraries.map(library => (\r\n                                                <em key={library}>{library} </em>\r\n                                        ))} \r\n                                    </div>\r\n                                    </div>\r\n\r\n                                <p>{project.summary}</p>\r\n\r\n                            </div>\r\n\r\n                            {/* <ProjectModal project={project} /> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                \r\n                ))}\r\n            </div>\r\n\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Projects;","import React from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n\r\n\r\nconst Home = ({user}) => {\r\n    return (\r\n        <section id=\"home\">\r\n\r\n            <h1>Hello, my name is <strong>{user.basics.name}</strong></h1> \r\n            <p>I am a <strong>{user.basics.region}</strong> based <strong>{user.basics.headline}</strong> with a strong inclination for problem-solving and seeing unique ideas come to life.</p>\r\n            <ReactTypingEffect className='typingEffect'\r\n                text=\"Learn more about me! \"\r\n            />\r\n            \r\n                <a href='/about'> <figure className = 'bottombtn'></figure></a>\r\n\r\n            \r\n\r\n            {/* <iframe src=\"https://aramatthew.com/RehabASeal/\" height=\"600\" width=\"960\"></iframe> */}\r\n            \r\n\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\n\r\nconst SocialLinks = ({user}) => {\r\n\r\n    return (\r\n            <div className=\"SocialLinks\">\r\n\r\n\r\n                {user.basics.profiles.map(profile => (\r\n\r\n\r\n                \r\n                    <div className = {profile.network} key ={profile.network}>\r\n                        <SocialIcon url={profile.url} target=\"_blank\" style={{ height: 30, width: 30 }} bgColor=\"#ffffff\"/>\r\n                        <em className=\"name\"> {profile.network} </em>\r\n                    </div>\r\n\r\n                    \r\n                    \r\n                ))}\r\n                <div>\r\n                    <SocialIcon url={'mailto:'+ user.basics.email} network= 'email' style={{ height: 30, width: 30 }} bgColor=\"#ffffff\"/>\r\n                    <em className=\"name\"> email </em>\r\n                </div>\r\n            </div>\r\n           \r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default SocialLinks;","import React from 'react';\r\nimport SocialLinks from '../SocialLinks';\r\n\r\nconst About = ({user}) => {\r\n\r\n    return (\r\n            <section id=\"about\">\r\n\r\n                  {/* <img className=\"profile-pic\"  src={user.basics.picture} alt=\"Ara Matthew Profile Pic\" /> */}\r\n                \r\n                <div className ='bio'> \r\n                    <h1>About Me</h1>\r\n                    <p> {user.basics.summary} </p>\r\n                    <p className='forwards'> Want to know more about me? Check out my <a href='/experience'> experience </a>and <a href='/projects'> projects!</a></p>\r\n                </div> \r\n\r\n                <div className ='contacts'> \r\n                    <h1>Contact</h1>\r\n                    <SocialLinks user={user} />\r\n\r\n                </div> \r\n\r\n            </section>\r\n           \r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default About;","// Make sure to run npm install @formspree/react\r\n// For more help visit https://formspr.ee/react-help\r\nimport React from 'react';\r\nimport { useForm, ValidationError } from '@formspree/react';\r\nfunction ContactForm() {\r\n  const [state, handleSubmit] = useForm(\"xjvaajap\");\r\n  if (state.succeeded) {\r\n    return <form> <p>Thank you, I will get back to you soon!</p></form>;\r\n  }\r\n  return (\r\n    \r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"email\">\r\n        Email:\r\n      </label>\r\n      <input\r\n        id=\"email\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n      />\r\n      <ValidationError\r\n        prefix=\"Email\"\r\n        field=\"email\"\r\n        errors={state.errors}\r\n      />\r\n      <div className='label'>\r\n        <label>Message:</label>\r\n      </div>\r\n      \r\n      <textarea className = \"messageInput\"\r\n        id=\"message\"\r\n        name=\"message\"\r\n      />\r\n      <ValidationError\r\n        prefix=\"Message\"\r\n        field=\"message\"\r\n        errors={state.errors}\r\n      />\r\n      <button type=\"submit\" disabled={state.submitting}>\r\n        Submit\r\n      </button>\r\n      \r\n    </form>\r\n  );\r\n}\r\nfunction App() {\r\n  return (\r\n    <ContactForm />\r\n  );\r\n}\r\nexport default App;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Projects = ({user}) => {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section id=\"experiencepage\">\r\n\r\n            \r\n            {user.work.map(work => (\r\n                \r\n                // eslint-disable-next-line react/jsx-no-target-blank\r\n                <a href={work.website} className=\"link\" target=\"_blank\"  key={work.company}> \r\n                    <img className =\"gif\" src={work.highlights[0]}  alt=\"logo\"></img> \r\n\r\n\r\n\r\n                    <div className='info'>\r\n                        <h1 className='position'> {work.position} </h1>\r\n                        <h4 className='company'> {work.company} </h4>\r\n                        <h5 className='dates'> {work.start.month}/{work.start.year} - {work.end.month}/{work.end.year} </h5>\r\n                        <p>{work.summary}</p>\r\n                    </div>\r\n                </a>\r\n            ))}\r\n\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Projects;\r\n\r\n\r\n\r\n","import Projects from './Pages/Projects.js';\r\nimport Home from './Pages/home.js';\r\nimport About from './Pages/about.js';\r\nimport Contact from './Pages/Contact.js';\r\nimport Experience from './Pages/Experience.js';\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Page = ({user}) =>  {\r\n\r\n    const pageSummaryMapping = user.interests.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.name]: item.keywords[0] }), {});\r\n\r\n    return (\r\n      <section id=\"page\">\r\n      <Switch >          \r\n        <Route path=\"/contact\">\r\n          <div className = \"pageSummary\"> \r\n            <div className='container'>\r\n                  <h1>Contact</h1>\r\n                  <p>\r\n                    {pageSummaryMapping.contact}\r\n                  </p>\r\n                </div>\r\n          </div>\r\n          <Contact />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <div className = \"pageSummary\"> \r\n            <div className='container'>\r\n                <img src ={user.basics.picture} alt=\"Ara Matthew Profile Pic\" />\r\n                <h1>{user.basics.name}</h1>\r\n                <p>\r\n                  {pageSummaryMapping.about}\r\n                </p>\r\n            </div>\r\n          </div>\r\n          <About className = \"container\" user = {user} />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <div className = \"pageSummary\"> \r\n              <div className='container'>\r\n                <h1>Projects</h1>\r\n                <p>\r\n                {pageSummaryMapping.projects}\r\n                </p>\r\n              </div>\r\n          </div>\r\n          <Projects user = {user}/>\r\n        </Route>\r\n\r\n        <Route path=\"/experience\">\r\n          <div className = \"pageSummary\">\r\n            <div className='container'> \r\n              <h1>Experience</h1>\r\n              <p>\r\n              {pageSummaryMapping.experience}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <Experience user = {user}/>\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <Home user = {user}/>\r\n        </Route>\r\n\r\n      </Switch>\r\n      </section>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport SocialLinks from './SocialLinks';\r\n\r\nconst Footer = ({user}) => (\r\n    <footer className=\"footer\">\r\n      <p>@ 2020 <a href='/'>Ara<strong>Matthew</strong></a></p>\r\n      <div className = \"socialLinks\">\r\n        <SocialLinks user= {user} />\r\n      </div>\r\n    </footer>\r\n  );\r\n\r\n  export default Footer;","\r\n\r\nimport Navbar from './Navbar.js';\r\nimport Page from './Page.js';\r\nimport Footer from './Footer'\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Active = ({user}) =>  {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <div className =\"curr\">\r\n        <Page user = {user}/>\r\n      </div>\r\n      <Footer user = {user} />\r\n    </Router> \r\n  );\r\n}\r\n\r\n\r\nexport default Active;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react'; \r\n// import localUser from './ifilter/myInfo.json';\r\nimport Page from './components/Active';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);  //initial value of user is null \r\n  useEffect( () => {\r\n    fetch('https://gitconnected.com/v1/portfolio/aghiulez') // returns a promise containing the response \r\n      .then(res => res.json())\r\n      .then(user => {\r\n        setUser(user);\r\n      });\r\n  }, []); //empty array (as second arg) will only call effect on initial render...\r\n  \r\n  if(!user){\r\n    console.log(\"nothing\");\r\n    return ( <div>   </div>);\r\n  }\r\n  return(\r\n      <Page className=\"page\" user={user} />\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}